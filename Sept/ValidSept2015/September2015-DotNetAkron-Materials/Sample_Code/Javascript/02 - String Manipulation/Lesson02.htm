<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>Lesson 02</title>
	<link rel="stylesheet" type="text/css" href="../common.css"/>
    <script src="Strings.js" type="text/javascript"></script>
</head>
<body>
	<h1>Lesson 02 - String Manipulation</h1>
	<p>Here are several useful functions for dealing with strings in JavaScript:</p>
	<h3>length</h3>
	<p>Gives you a count of the number of characters in a string.</p>
	<ol class="code">
		<li><code>var myString = "Apple";</code></li>
		<li><code>console.log("The string Apple has " + myString.length + " characters." + "\n");</code></li>
	</ol>
	<h3>substring</h3>
	<p>A string's characters can be accessed individually by position (starting with 0) with substring</p>
	<ol class="code">
		<li><code>console.log("Apple.substring(0,3) : " + myString.substring(0,3) + "\n");</code></li>
	</ol>
	<p>Note that the first index is inclusive and the last index is exclusive!</p>
	<ol class="code">
		<li><code>console.log("Apple.substring(2,4) : " + myString.substring(2,4) + "\n");</code></li>
	</ol>
	<p>Note that javascript doesn't mind if you go over max!</p>
	<ol class="code">
		<li><code>console.log("Apple.substring(3,12) : " + myString.substring(3,12) + "\n");</code></li>
	</ol>
	<h3>charAt</h3>
	<p>If we just want one char we can use charAt(n)</p>
	<ol class="code">
		<li><code>console.log("Apple.charAt(3) : " + myString.charAt(3) + "\n");</code></li>
	</ol>
	<h3>indexOf</h3>
	<p>indexOf() lets you test to see if a string exists, it will give you the index of the start.  It returns -1 if not found</p>
	<ol class="code">
		<li><code>console.log("This is my string indexOf('my') : " + "This is my string".indexOf("my") + "\n");</code></li>
	</ol>
	<h3>match</h3>
	<p>JavaScript supports regular expressions with match</p>
	<ol class="code">
		<li><code>var intRegex = /[0-9 -()+]+$/;</code></li>
		<li><code> </code></li>
		<li><code>var myNumber = '999';</code></li>
		<li><code>var myInt = myNumber.match(intRegex);</code></li>
		<li><code>console.log("Is 999 an int? " + myInt);</code></li>
		<li><code> </code></li>
		<li><code>myString = 'banana';</code></li>
		<li><code>var myInt = myString.match(intRegex);</code></li>
		<li><code>console.log("How about banana, is that an int? " + myInt + "\n");</code></li>
	</ol>
	<h3>replace</h3>
	<p>use replace to replace matched characters within strings</p>
	<ol class="code">
		<li><code>console.log("'I love columbus'.replace('columbus', 'cleveland') : " + 'I love columbus'.replace('columbus', 'cleveland') + "\n");</code></li>
	</ol>
	<h3>split</h3>
	<p>We can also split on any character (delimiter) into an array: </p>
	<ol class="code">
		<li><code>var words = "100 Maple St.,Akron,OH,44311".split(",");</code></li>
		<li><code>console.log(words[0]);</code></li>
		<li><code>console.log(words[1]);</code></li>
		<li><code>console.log(words[2]);</code></li>
		<li><code>console.log(words[3]);</code></li>
	</ol>
</body>
</html>
